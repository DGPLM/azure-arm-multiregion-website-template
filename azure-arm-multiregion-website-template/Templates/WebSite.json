{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "siteName": {
            "type": "string"
        },
        "hostingPlanName": {
            "type": "string"
        },
        "siteLocations": {
            "type": "array",
            "defaultValue": [
                "West Europe",
                "East Asia",
                "Southeast Asia",
                "East US",
                "West US"
            ],
            "metadata": {
                "description": "Locations"
            }
        },     
        "sku": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard",
                "Premium"
            ],
            "defaultValue": "Free"
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_ZRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "workerSize": {
            "type": "string",
            "allowedValues": [
                "0",
                "1",
                "2"
            ],
            "defaultValue": "0"
        },
        "newStorageAccountName": {
            "type": "string",
            "defaultValue": "sjkpstorageaccount" 
        }
    },
    "variables": {
        "storageid": "[resourceId('Microsoft.Storage/storageAccounts',parameters('newStorageAccountName'))]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('newStorageAccountName')]",
            "apiVersion": "2015-05-01-preview",
            "location": "[parameters('siteLocations')[0]]",
            "properties": {
                "accountType": "[parameters('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2014-06-01",
            "name": "[concat(parameters('hostingPlanName'),copyIndex())]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[parameters('siteLocations')[copyIndex()]]",
            "tags": {
                "displayName": "HostingPlan"
            },
            "properties": {
                "name": "[concat(parameters('hostingPlanName'),copyIndex())]",
                "sku": "[parameters('sku')]",
                "workerSize": "[parameters('workerSize')]",
                "numberOfWorkers": 1
            },
            "copy": {
                "name": "hostingPlanCopy",
                "count": "[length(parameters('siteLocations'))]"
            }
        },
        {
            "apiVersion": "2014-06-01",
            "name": "[concat(parameters('siteName'),copyIndex())]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('siteLocations')[copyIndex()]]",
            "tags": {
                "[concat('hidden-related:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
                "displayName": "Website"

            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', concat(parameters('hostingPlanName'),copyIndex()))]",
                "[concat('Microsoft.Storage/storageAccounts/', parameters('newStorageAccountName'))]"
            ],
            "properties": {
                "name": "[concat(parameters('siteName'),copyIndex())]",
                "serverFarm": "[concat(parameters('hostingPlanName'),copyIndex())]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureStorageAccount",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('newStorageAccountName'),';AccountKey=',listKeys(variables('storageid'),'2015-05-01-preview').key1)]"
                        }
                    ]
                }
            },
            "copy": {
                "name": "siteCopy",
                "count": "[length(parameters('siteLocations'))]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('hostingPlanName'),copyIndex(), '-', resourceGroup().name)]",
            "type": "Microsoft.Insights/autoscalesettings",
            "location": "East US",
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'),copyIndex())]": "Resource",
                "displayName": "AutoScaleSettings"
            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'),copyIndex())]"
            ],
            "properties": {
                "profiles": [
                    {
                        "name": "Default",
                        "capacity": {
                            "minimum": 1,
                            "maximum": 2,
                            "default": 1
                        },
                        "rules": [
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'),copyIndex())]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT10M",
                                    "timeAggregation": "Average",
                                    "operator": "GreaterThan",
                                    "threshold": 80.0
                                },
                                "scaleAction": {
                                    "direction": "Increase",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT10M"
                                }
                            },
                            {
                                "metricTrigger": {
                                    "metricName": "CpuPercentage",
                                    "metricResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'),copyIndex())]",
                                    "timeGrain": "PT1M",
                                    "statistic": "Average",
                                    "timeWindow": "PT1H",
                                    "timeAggregation": "Average",
                                    "operator": "LessThan",
                                    "threshold": 60.0
                                },
                                "scaleAction": {
                                    "direction": "Decrease",
                                    "type": "ChangeCount",
                                    "value": 1,
                                    "cooldown": "PT1H"
                                }
                            }
                        ]
                    }
                ],
                "enabled": false,
                "name": "[concat(parameters('hostingPlanName'),copyIndex(), '-', resourceGroup().name)]",
                "targetResourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'),copyIndex())]"
            },
             "copy": {
                "name": "siteCopy",
                "count": "[length(parameters('siteLocations'))]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat('ServerErrors ', parameters('siteName'),copyIndex())]",
            "type": "Microsoft.Insights/alertrules",
            "location": "East US",
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', parameters('siteName'),copyIndex())]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource",
                "displayName": "ServerErrorsAlertRule"
            },
            "properties": {
                "name": "[concat('ServerErrors ', parameters('siteName'),copyIndex())]",
                "description": "[concat(parameters('siteName'), ' has some server errors, status code 5xx.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'),copyIndex())]",
                        "metricName": "Http5xx"
                    },
                    "operator": "GreaterThan",
                    "threshold": 0.0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": [ ]
                }
            },
             "copy": {
                "name": "siteCopy",
                "count": "[length(parameters('siteLocations'))]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat('ForbiddenRequests ', parameters('siteName'),copyIndex())]",
            "type": "Microsoft.Insights/alertrules",
            "location": "East US",
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', parameters('siteName'),copyIndex())]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource",
                "displayName": "ForbiddenRequestsAlertRule"
            },
            "properties": {
                "name": "[concat('ForbiddenRequests ', parameters('siteName'),copyIndex())]",
                "description": "[concat(parameters('siteName'),copyIndex(), ' has some requests that are forbidden, status code 403.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'),copyIndex())]",
                        "metricName": "Http403"
                    },
                    "operator": "GreaterThan",
                    "threshold": 0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": [ ]
                }
            },
             "copy": {
                "name": "siteCopy",
                "count": "[length(parameters('siteLocations'))]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat('CPUHigh ', parameters('hostingPlanName'),copyIndex())]",
            "type": "Microsoft.Insights/alertrules",
            "location": "East US",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'),copyIndex())]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
                "displayName": "CPUHighAlertRule"
            },
            "properties": {
                "name": "[concat('CPUHigh ', parameters('hostingPlanName'),copyIndex())]",
                "description": "[concat('The average CPU is high across all the instances of ', parameters('hostingPlanName'),copyIndex())]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'),copyIndex())]",
                        "metricName": "CpuPercentage"
                    },
                    "operator": "GreaterThan",
                    "threshold": 90,
                    "windowSize": "PT15M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": [ ]
                }
            },
             "copy": {
                "name": "siteCopy",
                "count": "[length(parameters('siteLocations'))]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'),copyIndex())]",
            "type": "Microsoft.Insights/alertrules",
            "location": "East US",
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', parameters('hostingPlanName'),copyIndex())]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'))]": "Resource",
                "displayName": "LongHttpQueueAlertRule"
            },
            "properties": {
                "name": "[concat('LongHttpQueue ', parameters('hostingPlanName'),copyIndex())]",
                "description": "[concat('The HTTP queue for the instances of ', parameters('hostingPlanName'),copyIndex(), ' has a large number of pending requests.')]",
                "isEnabled": false,
                "condition": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.ThresholdRuleCondition",
                    "dataSource": {
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[concat(resourceGroup().id, '/providers/Microsoft.Web/serverfarms/', parameters('hostingPlanName'),copyIndex())]",
                        "metricName": "HttpQueueLength"
                    },
                    "operator": "GreaterThan",
                    "threshold": 100.0,
                    "windowSize": "PT5M"
                },
                "action": {
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                    "sendToServiceOwners": true,
                    "customEmails": [ ]
                }
            },
             "copy": {
                "name": "siteCopy",
                "count": "[length(parameters('siteLocations'))]"
            }
        },
        {
            "apiVersion": "2014-04-01",
            "name": "[concat(parameters('siteName'),copyIndex())]",
            "type": "Microsoft.Insights/components",
            "location": "Central US",
            "dependsOn": [
                "[concat('Microsoft.Web/sites/', parameters('siteName'),copyIndex())]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceGroup().id, '/providers/Microsoft.Web/sites/', parameters('siteName'))]": "Resource",
                "displayName": "AppInsightsComponent"
            },
            "properties": {
                "applicationId": "[concat(parameters('siteName'),copyIndex())]"
            },
             "copy": {
                "name": "siteCopy",
                "count": "[length(parameters('siteLocations'))]"
            }
        }
    ]
}
